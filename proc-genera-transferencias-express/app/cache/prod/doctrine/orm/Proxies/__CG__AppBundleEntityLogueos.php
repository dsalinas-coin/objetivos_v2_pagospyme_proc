<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Logueos extends \AppBundle\Entity\Logueos implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'idLogueo', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'idoperador', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechain', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechaout', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechaout2', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'estado');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'idLogueo', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'idoperador', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechain', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechaout', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'fechaout2', '' . "\0" . 'AppBundle\\Entity\\Logueos' . "\0" . 'estado');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Logueos $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdLogueo()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getIdLogueo();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdLogueo', array());

        return parent::getIdLogueo();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdoperador($idoperador)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdoperador', array($idoperador));

        return parent::setIdoperador($idoperador);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdoperador()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdoperador', array());

        return parent::getIdoperador();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechain($fechain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechain', array($fechain));

        return parent::setFechain($fechain);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechain', array());

        return parent::getFechain();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaout($fechaout)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaout', array($fechaout));

        return parent::setFechaout($fechaout);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaout', array());

        return parent::getFechaout();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaout2($fechaout2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaout2', array($fechaout2));

        return parent::setFechaout2($fechaout2);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaout2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaout2', array());

        return parent::getFechaout2();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstado($estado)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstado', array($estado));

        return parent::setEstado($estado);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstado()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstado', array());

        return parent::getEstado();
    }

}
