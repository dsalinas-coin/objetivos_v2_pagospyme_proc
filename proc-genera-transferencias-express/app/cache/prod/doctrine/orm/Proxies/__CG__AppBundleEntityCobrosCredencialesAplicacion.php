<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CobrosCredencialesAplicacion extends \AppBundle\Entity\CobrosCredencialesAplicacion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idaplicacion', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idcobrocred', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idfactura', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'fechaaplicacion', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'importe', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'activo');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idaplicacion', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idcobrocred', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'idfactura', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'fechaaplicacion', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'importe', '' . "\0" . 'AppBundle\\Entity\\CobrosCredencialesAplicacion' . "\0" . 'activo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CobrosCredencialesAplicacion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdaplicacion()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdaplicacion();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdaplicacion', array());

        return parent::getIdaplicacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdcobrocred($idcobrocred)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdcobrocred', array($idcobrocred));

        return parent::setIdcobrocred($idcobrocred);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdcobrocred()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdcobrocred', array());

        return parent::getIdcobrocred();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdfactura($idfactura)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdfactura', array($idfactura));

        return parent::setIdfactura($idfactura);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdfactura()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdfactura', array());

        return parent::getIdfactura();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaaplicacion($fechaaplicacion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaaplicacion', array($fechaaplicacion));

        return parent::setFechaaplicacion($fechaaplicacion);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaaplicacion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaaplicacion', array());

        return parent::getFechaaplicacion();
    }

    /**
     * {@inheritDoc}
     */
    public function setImporte($importe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImporte', array($importe));

        return parent::setImporte($importe);
    }

    /**
     * {@inheritDoc}
     */
    public function getImporte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImporte', array());

        return parent::getImporte();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivo($activo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivo', array($activo));

        return parent::setActivo($activo);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivo', array());

        return parent::getActivo();
    }

}
